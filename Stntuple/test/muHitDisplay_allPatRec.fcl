# -*- mode: tcl -*-
#------------------------------------------------------------------------------
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

#include "Stntuple/fcl/prolog.fcl"

BEGIN_PROLOG
  bgHitFiles                          : @nil
  G4_MODULE_LABEL                     : "g4run"          # for normal generators and Ralf's cosmics
END_PROLOG

#include "Stntuple/fcl/templates.fcl"

process_name : aaa

source : { 
#    module_type : EmptyEvent
    module_type : RootInput
#    fileNames   : [ {INPUT_DATA_FILE} ]
#    fileNames : ["/mu2e/data/tdr/beam/g4s4p7/tdr.beam.g4s4.flat.1812b.16762780/good/00000/dsStopsToHitsFlat.root"]
#    maxEvents   : 100

#    inputCommands : ['keep *_*_*_*'
#		     , 'drop *_muonTimeMap_*_*'
#		     , 'drop *_protonTimeMap_*_*'
#		     , 'drop mu2eStrawDigis_*_*_*'
#		     , 'drop mu2eStrawHits_*_*_*'
#		     , 'drop *_CaloReadoutHitsMaker_*_*'
#		     , 'drop *_CaloCrystalHitsMaker_*_*'
# Uncomment the above lines to reduce file size.
#		     ]  
}

physics : { @table::physics

    producers: { @table::physics.producers
	generate             :  { @table::Stntuple.producers.egun }
    }
#------------------------------------------------------------------------------
# paths
#------------------------------------------------------------------------------
    trigger_paths  : [ gen_allpatrec_reco_display ]
    
#    out : [detectorOutput]
out : []
#    an  : [genCountLogger]
    end_paths      : [out]
}

outputs: {
    detectorOutput : {
        module_type : RootOutput
        SelectEvents: { SelectEvents: [ gen_allpatrec_reco_display ] }
#        outputCommands:   [ "keep *_*_*_*",
#                            "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_g4run_*_*"
#                          ]
        fileName    : "trkPatRec.art"
    }
}
#------------------------------------------------------------------------------
# redefinitions
#------------------------------------------------------------------------------
# 1. only for interactive submission
#------------------------------------------------------------------------------
services.user.SeedService.baseSeed             :  0
services.user.SeedService.maxUniqueEngines     :  20

# print per event timing for ::event entry points
services.Timing: { }
# print 
services.scheduler.wantSummary: true
services.TFileService.fileName            : "muHitTrkPatRec.hist"

# Apply the time offsets in tracker digitization
physics.producers.makeSD.TimeOffsets               : { inputs : [ "protonTimeMap", "muonTimeMap" ] }
physics.producers.MakeCaloReadoutHits.TimeOffsets  : { inputs : [ "protonTimeMap", "muonTimeMap" ] }

services.scheduler.defaultExceptions : false
services.user.SeedService.policy           :  autoIncrement
services.user.SeedService.maxUniqueEngines :  20
