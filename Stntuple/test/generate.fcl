# -*- mode: tcl -*-

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

process_name : generate

source : {  
    module_type : EmptyEvent
#    module_type : RootInput
#    fileNames   : [ "INPUT_DATA_FILE" ]
    maxEvents   : 100

    inputCommands : ['keep *_*_*_*'
#                   , 'drop mu2eStrawDigis_*_*_*'
#                   , 'drop mu2eStrawHits_*_*_*'
# Uncomment the above line to reduce file size.
		     ]  
}

services : {

    message               : @local::default_message
    TFileService          : { fileName : "generate.hist" }
    RandomNumberGenerator : { }

    user : {
        GeometryService        : { inputFile      : "JobConfig/TDR/geom_MothersToHits.txt" }
        ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"        }
        GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt"   }
        G4Helper               : { }
        SeedService            : @local::automaticSeeds
    }
}

physics : {
    producers: {
        generate             : @local::StoppedMuonConversionGun
        g4run                : @local::g4run
        compressPVDetector   : @local::CompressPhysicalVolumes
        protonTimeMap        : { module_type : GenerateProtonTimes }
        muonTimeMap          : { module_type : GenerateMuonLife }
#------------------------------------------------------------------------------
# digitization, detector hit makers
#------------------------------------------------------------------------------
        makeSD               : @local::makeSD
        makeSH               : @local::makeSHfromSD
	MakeCaloReadoutHits  : @local::MakeCaloReadoutHits
	CaloCrystalHitsMaker : @local::MakeCaloCrystalHitsNew
    }

    filters: {
#------------------------------------------------------------------------------
# Reject events with no hits from signal-like tracks in the detectors.  
# The filter does not look at the background hits from mixed events.
#------------------------------------------------------------------------------
        detectorFilter       : @local::FilterStepPointMomentum
    }

    analyzers: {
	genCountLogger: {
	    module_type: GenEventCountReader
	}
	gpa: {
	    module_type: GenParticlesAnalyzer
	    inputs: generate
	}
    }
#------------------------------------------------------------------------------
# paths
#------------------------------------------------------------------------------
    detPath : [ 
	       generate, g4run 
	       , detectorFilter 
#	       , compressPVDetector
	       , protonTimeMap, muonTimeMap
	       , makeSD, makeSH
	       , MakeCaloReadoutHits, CaloCrystalHitsMaker
	      ]
    trigger_paths  : [detPath]
    
    out : [detectorOutput]
#    out : []
    end_paths      : [out]
}

outputs: {
    detectorOutput : {
        module_type : RootOutput
        SelectEvents: { SelectEvents: [detPath] }
        outputCommands:   [ "keep *_*_*_*",
                            "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_g4run_*_*"
                          ]
        fileName    : "generate.art"
    }
}
#------------------------------------------------------------------------------
# redefinitions
#------------------------------------------------------------------------------
# 1. only for interactive submission
#------------------------------------------------------------------------------
services.user.SeedService.baseSeed             :  0
services.user.SeedService.maxUniqueEngines     :  20

# print per event timing for ::event entry points
# services.Timing: { }
# print 
services.scheduler.wantSummary: true

# sensitive detectors
physics.producers.g4run.SDConfig.enableAllSDs : false
physics.producers.g4run.SDConfig.enableSD     : [ tracker, calorimeter, calorimeterRO, virtualdetector ]

# Apply the time offsets in tracker digitization
physics.producers.makeSD.TimeOffsets              : { inputs : [ "protonTimeMap", "muonTimeMap" ] }
physics.producers.MakeCaloReadoutHits.TimeOffsets : { inputs : [ "protonTimeMap", "muonTimeMap" ] }

