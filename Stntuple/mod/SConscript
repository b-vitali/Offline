#!/usr/bin/env python
#
# Script to build the files found in this directory.
#------------------------------------------------------------------------------
import os
Import('env')
Import('stntuple_helper')

helper = stntuple_helper(env);
#------------------------------------------------------------------------------
# 2016-10-10: STNTUPLE link: add ROOT 'EG' library after 'Physics' library
#------------------------------------------------------------------------------
babarlibs = env['BABARLIBS']
rootlibs  = env['ROOTLIBS']
if ( not ("EG" in rootlibs)):
    rootlibs.insert(rootlibs.index("Physics")+1,"EG");
#------------------------------------------------------------------------------
# '#' tells not to prepend local directory
#------------------------------------------------------------------------------
cc_file = '#'+helper.tmp_dira()+'/stntuple_print_header.cc';
script  = '#Stntuple/scripts/create_print_header_routine.sh';
helper.do_codegen(cc_file,script);

helper.handle_dictionaries();

libs     = [ 'Stntuple_val',
             'Stntuple_alg',
             'Stntuple_gui',
             'Stntuple_obj',
             'Stntuple_base',
             'mu2e_CalPatRec',
             'mu2e_CalPatRec_dict',
             'mu2e_CaloCluster',
             'mu2e_TrkDiag',
             'mu2e_TrkReco',
             'mu2e_CalorimeterGeom',
             'mu2e_GeometryService',
             'mu2e_SeedService_SeedService_service',
             'mu2e_GlobalConstantsService',
             'mu2e_TrackerConditions',
             'mu2e_ConditionsService',
             'mu2e_GlobalConstantsService_GlobalConstantsService_service',
             'mu2e_Mu2eUtilities',
             'mu2e_GeneralUtilities',
             'mu2e_MCDataProducts',
             'mu2e_RecoDataProducts',
             'mu2e_DataProducts',
             'mu2e_CaloMC',
             'mu2e_BTrkData',
             'mu2e_Mu2eInterfaces',
             'HepPDT',
             'HepPID',
             babarlibs,
             'CLHEP',
             'art_Framework_Core',
             'art_Framework_Principal',
             'art_Framework_Services_Registry',
             'art_root_io_tfile_support',
             'art_root_io_TFileService_service',
             'art_Persistency_Provenance',
             'art_Persistency_Common',
             'art_Utilities',
             rootlibs, 
             'fhiclcpp',
             'MF_MessageLogger.so',
             'canvas',
             'cetlib',
             'cetlib_except',
             'xerces-c',
             'boost_filesystem',
             'boost_system'
];

list_of_cc_files = Glob('*.cc',strings=True);
# print "1. Stntuple/mod: list_of_cc_files:",list_of_cc_files

list_of_modules = Glob('*_module.cc', strings=True)

skip_list = list_of_modules

# print "2. Stntuple/mod: skip_list:",skip_list

helper.build_libs(list_of_cc_files,skip_list,libs)

helper.build_modules(list_of_modules,[],libs)

# print "tmpdir:"+env['TMP_LIB_DIR']
